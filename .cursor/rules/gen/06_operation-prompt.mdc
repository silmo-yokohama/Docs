---
description: 
globs: 
alwaysApply: false
---
# 運用関連ドキュメント生成プロンプト

## プロンプトの目的と概要

このプロンプトは、WEBアプリケーションの運用段階で必要となる以下のドキュメントを効率的に作成するためのガイドです：

- デプロイ手順：アプリケーションを本番環境に展開するための手順
- 保守運用計画：アプリケーションの稼働を維持するための運用計画
- バックアップ計画：重要データの保護と復旧のための計画
- 障害対応手順：障害発生時の対応手順と連絡体制

個人開発においては、運用面のドキュメントは必要最小限に抑えつつも、トラブル発生時に役立つ情報を整理することが重要です。このプロンプトを使用することで、プロジェクトの規模や要件に応じた適切な運用ドキュメントを対話形式で作成できます。

## 基本方針

### 個人開発における効率化のポイント

- 小規模プロジェクトではREADME.mdにデプロイ手順を統合し、独立したドキュメントは作成しない
- 保守運用計画は最低限必要な事項のみ記載し、過度に詳細な計画は避ける
- バックアップ計画は重要データを扱う場合のみ作成し、それ以外は省略する
- 障害対応手順は24時間運用など特殊な要件がある場合のみ詳細化する
- 一人で管理可能な範囲での運用計画を心がける

### 必要に応じた取捨選択の考え方

- プロジェクトの性質（個人/趣味/商用）に応じてドキュメントの詳細度を調整する
- データの重要性に応じてバックアップ計画の有無や詳細度を決定する
- サービスの重要度に応じて障害対応の詳細度を決定する（例：趣味のサイトか収益が発生するサービスか）
- 無料/低コストのツールやサービスを活用した運用方法を優先する

### ドキュメント間の整合性確保方法

- 「01_要件定義/03_非機能要件.md」と整合性を取り、可用性や保守性の要件を満たす運用計画を作成する
- 「02_技術選定/02_インフラ構成.md」で選択したインフラ構成と一致するデプロイ手順と運用計画を作成する
- 「05_環境構築/02_本番環境構築手順.md」と整合性を取り、デプロイ手順を作成する
- ドキュメント間で矛盾する内容がないか定期的にレビューする

## 対象ドキュメント

### 01_デプロイ手順.md

**目的**: アプリケーションを本番環境に展開するための具体的な手順を記録し、誰でも（特に自分自身が将来）デプロイできるようにするためのドキュメント

**重要度**: 中〜高（小規模プロジェクトの場合はREADME.mdに統合可能）

**主な内容**:
- デプロイの前提条件
- デプロイ環境の準備手順
- デプロイコマンドとパラメータ
- 動作確認手順
- ロールバック手順

### 02_保守運用計画.md

**目的**: アプリケーションの安定稼働を維持するための運用計画を記録するドキュメント

**重要度**: 低〜中（小規模なら省略可能）

**主な内容**:
- 定期メンテナンスの頻度と内容
- 監視項目とアラート設定
- ログ管理の方法
- セキュリティアップデート対応
- パフォーマンス監視と最適化

### 03_バックアップ計画.md

**目的**: 重要データを保護し、データ損失時に復旧するための計画を記録するドキュメント

**重要度**: 条件付き（重要データがある場合のみ必要）

**主な内容**:
- バックアップ対象データ
- バックアップ頻度と保存期間
- バックアップ方法と手順
- 復元手順
- バックアップの動作確認方法

### 04_障害対応手順.md

**目的**: 障害発生時の対応手順と連絡体制を記録し、迅速な復旧を可能にするためのドキュメント

**重要度**: 条件付き（24時間運用など特殊な要件がある場合のみ必要）

**主な内容**:
- 想定される障害パターン
- 障害検知の方法
- 初動対応手順
- エスカレーションルール（外部サービス利用時の連絡先など）
- 障害報告の方法

## 図表の使用ガイドライン

運用ドキュメントには必要に応じて以下の図表をMermaid形式で含めることを検討してください：

1. デプロイフロー図：デプロイの各ステップと判断ポイントを視覚化
2. 障害対応フローチャート：障害発生時の対応フローを明確化
3. バックアップ・復元プロセス図：データ保護の流れを図示
4. システム監視ダッシュボード設計：監視する項目と閾値の関係性を表現

例：デプロイフロー図のMermaid記法
```mermaid
flowchart TD
    A[ビルド準備] --> B{テスト成功?}
    B -->|Yes| C[本番環境デプロイ]
    B -->|No| D[テスト修正]
    D --> A
    C --> E{動作確認}
    E -->|OK| F[完了]
    E -->|NG| G[ロールバック]
    G --> H[障害調査]
    H --> A
```

## 進行方法

このプロンプトを使った運用ドキュメント作成の進め方は以下の通りです：

1. プロジェクトの特性（規模、重要性、データ特性など）に基づいて、作成するドキュメントを決定
2. 既存の「01_要件定義」および「02_技術選定」「05_環境構築」ドキュメントを参照しながら、運用計画の前提を確認
3. 各ドキュメントについて、以下の質問に一問一答形式で回答
4. 回答を基にドキュメントのドラフトを作成
5. ドラフトをレビューし、過不足や矛盾がないか確認
6. 必要に応じて内容を調整し、最終版を作成

## 質問項目

### 01_デプロイ手順.md 作成のための質問

※「05_環境構築/02_本番環境構築手順.md」および「02_技術選定/02_インフラ構成.md」の内容を確認した上で、不明点のみ質問に回答してください。

1. 「05_環境構築/02_本番環境構築手順.md」に記載されていない、デプロイ固有の前提条件はありますか？
2. デプロイに使用するツールやサービスは、技術選定ドキュメントで選択されたもの以外にありますか？
3. 実際のデプロイコマンドやスクリプトの具体的な内容を教えてください。
4. デプロイ後の動作確認はどのように行いますか？
5. 問題が発生した場合のロールバック手順を詳細に教えてください。
6. デプロイ時に特に注意すべき点はありますか？

### 02_保守運用計画.md 作成のための質問

※「01_要件定義/03_非機能要件.md」および「02_技術選定/02_インフラ構成.md」の内容を確認した上で、不明点のみ質問に回答してください。

1. アプリケーションの監視方法や使用するツールについて、既存ドキュメントに記載されていない詳細はありますか？
2. 定期メンテナンスの具体的な内容と頻度を教えてください。
3. セキュリティアップデートの適用ポリシーはどのようにしますか？
4. パフォーマンス監視と最適化の具体的な方法を教えてください。
5. 利用状況や運用統計の収集・分析方法について詳細を教えてください。
6. 運用上の制約事項で考慮すべき点はありますか？（メンテナンス時間帯の制限など）

### 03_バックアップ計画.md 作成のための質問

※「01_要件定義/03_非機能要件.md」および「02_技術選定/02_インフラ構成.md」の内容を確認した上で、不明点のみ質問に回答してください。

1. バックアップが必要なデータの具体的な種類と重要度を教えてください。
2. バックアップの頻度と保存期間について、既存ドキュメントに記載されていない詳細はありますか？
3. バックアップ方法として具体的に使用するツールやサービスを教えてください。
4. バックアップデータの保存先の詳細を教えてください。
5. バックアップからの復元手順について具体的に教えてください。
6. バックアップの動作確認方法と頻度を教えてください。
7. バックアップに関する制約事項はありますか？（容量制限など）

### 04_障害対応手順.md 作成のための質問

※「01_要件定義/03_非機能要件.md」および「02_技術選定/02_インフラ構成.md」の内容を確認した上で、不明点のみ質問に回答してください。

1. 想定される具体的な障害パターンを教えてください。
2. 障害を検知する具体的な方法やツール設定を教えてください。
3. 障害発生時の初動対応の詳細手順を教えてください。
4. 外部サービスに起因する障害が発生した場合の対応方法を教えてください。
5. 利用者への通知が必要な場合、その具体的な方法と内容を教えてください。
6. 障害報告書が必要な場合、その形式や管理方法を教えてください。
7. 障害履歴の管理方法について詳細を教えてください。

## ドキュメントテンプレート

### 01_デプロイ手順.md テンプレート

```markdown
# デプロイ手順

## 概要
このドキュメントでは、[アプリケーション名]を本番環境にデプロイするための手順を説明します。

## 前提条件
- 必要なアクセス権限
- 事前にインストールが必要なツール
- 環境変数等の準備

## デプロイ環境
- デプロイ先の環境情報
- アクセス方法

## デプロイ手順

### 1. 準備
- ビルド方法
- テスト実行方法
- 必要なファイルの準備

### 2. デプロイ実行
- 使用するコマンド
- 必要なパラメータ
- 実行例

### 3. 動作確認
- 確認すべき点
- 確認方法

### 4. ロールバック手順
- 問題発生時の戻し方
- 過去バージョンの復元方法

## トラブルシューティング
- よくある問題と解決策
- デプロイ失敗時のチェックポイント

## 参考情報
- 関連ドキュメントへのリンク
- 使用ツールの公式ドキュメント
```

### 02_保守運用計画.md テンプレート

```markdown
# 保守運用計画

## 概要
このドキュメントでは、[アプリケーション名]の安定稼働を維持するための運用計画を説明します。

## 定期メンテナンス
- メンテナンス内容
- 実施頻度と時間帯
- 実施手順

## 監視計画
- 監視項目
- 使用ツール
- アラート設定
- 確認頻度

## ログ管理
- ログの種類と保存場所
- 保存期間
- 確認方法

## セキュリティ対応
- セキュリティアップデートの適用方針
- 脆弱性スキャンの実施計画
- インシデント発生時の対応

## パフォーマンス監視と最適化
- パフォーマンス指標
- 監視方法
- 最適化の判断基準

## 運用ツール
- 使用するツールとサービス
- 設定方法
- アクセス方法

## 運用スケジュール
- 日次/週次/月次の作業
- 担当者（個人開発の場合は主に自分）

## 制約事項
- リソース制限
- メンテナンス可能時間帯
- その他留意事項
```

### 03_バックアップ計画.md テンプレート

```markdown
# バックアップ計画

## 概要
このドキュメントでは、[アプリケーション名]のデータバックアップと復元の計画を説明します。

## バックアップ対象
- バックアップが必要なデータの種類
- 推定データ量

## バックアップ方針
- バックアップ頻度
- 保存期間
- 世代管理

## バックアップ方法
- 使用するツールとサービス
- バックアップ実行コマンド
- 自動化の方法

## バックアップ保存先
- 保存場所（ローカル/クラウド/外部メディア）
- アクセス方法
- セキュリティ対策

## 復元手順
- バックアップからの復元方法
- 復元実行コマンド
- 動作確認方法

## バックアップ確認
- バックアップの正常性確認方法
- 定期的な復元テスト計画

## コストと制約
- バックアップにかかる費用
- ストレージ制限
- その他制約事項
```

### 04_障害対応手順.md テンプレート

```markdown
# 障害対応手順

## 概要
このドキュメントでは、[アプリケーション名]で障害が発生した場合の対応手順を説明します。

## 想定される障害パターン
- サーバー障害
- データベース障害
- ネットワーク障害
- アプリケーション障害
- 外部サービス障害

## 障害検知方法
- 監視ツールの設定
- アラート通知の方法
- 手動チェック項目

## 初動対応手順
- 障害の切り分け方法
- 応急処置手順
- ログ収集方法

## 障害別対応手順
### サーバー障害
- 確認事項
- 対応手順

### データベース障害
- 確認事項
- 対応手順

### ネットワーク障害
- 確認事項
- 対応手順

### アプリケーション障害
- 確認事項
- 対応手順

### 外部サービス障害
- 確認事項
- 対応手順

## 連絡体制
- 外部サービスサポート連絡先
- その他緊急連絡先

## 利用者への通知
- 通知が必要な状況
- 通知方法と内容
- 通知テンプレート

## 障害報告
- 報告書の作成基準
- 報告書テンプレート
- 保管方法

## 障害履歴管理
- 履歴の記録方法
- 再発防止策の検討方法
```

## 出力形式

### ファイル名の命名規則
- 01_デプロイ手順.md
- 02_保守運用計画.md
- 03_バックアップ計画.md
- 04_障害対応手順.md

### 保存先パス
```text
{プロジェクト名}/06_運用/
```

### ドキュメント形式
- Markdown形式で作成
- 見出しレベルは適切に階層化
- コードブロックは```で囲む
- コマンド例は具体的に記載
- 図表が必要な場合はMermaid形式で作成

## 開始方法

このプロンプトを使用して運用ドキュメントを作成するには、以下のステップで進めます：

1. プロジェクトの特性（規模、重要性など）に基づいて、作成が必要なドキュメントを決定します
2. 既存の「01_要件定義」「02_技術選定」「05_環境構築」ドキュメントを参照して、これらに記載されている情報は再度質問しないようにします
3. 各ドキュメントについて、関連する質問に回答していきます
4. 回答に基づいて、AIがドキュメントのドラフトを生成します
5. ドラフトをレビューし、必要に応じて追加修正を行います
6. 完成したドキュメントを指定のパスに保存します

まずは以下の質問に回答して、プロジェクトに必要な運用ドキュメントを特定しましょう：

- このプロジェクトはどのような性質ですか？（個人的な趣味、収益を目的としたサービスなど）
- 「01_要件定義/03_非機能要件.md」に記載されていない重要なデータや可用性要件はありますか？
- 既存ドキュメントに記載されていない24時間稼働要件はありますか？
- 想定されるユーザー数や負荷で、既存ドキュメントに記載されていない情報はありますか？

上記を踏まえて、作成すべきドキュメントとその詳細度を決定します。 